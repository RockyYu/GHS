### 设置###
log4j.rootLogger = debug,stdout,D,E

### 输出信息到控制抬 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n

##### 输出DEBUG 级别以上的日志文件设置 #####
#每天产生一个日志文件
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
#日志文件位置：该路径为:项目根目录/logs/
log4j.appender.D.File = logs/debug.log
#保存的日志备份文件个数
log4j.appender.debug.MaxBackupIndex=10
#日志文件是否追加
log4j.appender.D.Append = true
#定义的时间格式，如果时间定义到分钟（mm）就是每分钟生成一个日志文件，而这里定义的这个格式就是日志名后缀
#每分钟
log4j.appender.D.DatePattern='_'yyyy-MM-dd-HH-mm
#log4j.appender.D.DatePattern='_' yyyy-MM-dd-HH    每小时
#log4j.appender.D.DatePattern='_' yyyy-MM-dd	每天
#log4j.appender.D.DatePattern='_' yyyy-MM-dd-a	每半天
#日志输出级别
log4j.appender.D.Threshold = DEBUG
#日志中输出的日志的格式
log4j.appender.D.layout = org.apache.log4j.PatternLayout
#定义日志输出格式
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n


### 输出ERROR 级别以上的日志文件设置 ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File = logs/error.log
log4j.appender.debug.MaxBackupIndex=10
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR 
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n